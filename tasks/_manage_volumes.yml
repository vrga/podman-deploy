- name: manage volume mount dirs - direct path
  file:
    dest:  "{{ item.1 }}"
    state: directory
  loop: "{{ _containers | subelements('manage_dirs', True) }}"
  loop_control:
    label: "{{ item.1 }}"
  when: item.1 is not mapping
  tags:
    - podman-deploy

- name: manage volume mount dirs - dict
  file:
    state: directory
    dest:  "{{ item.1.path }}"
    owner: "{{ item.1.owner  | default('root') }}"
    group: "{{ item.1.group | default('root') }}"
    mode:  "{{ item.1.mode | default(omit) }}"
    recurse: "{{ item.1.recurse | default(omit) }}"
  loop: "{{ _containers | subelements('manage_dirs', True) }}"
  loop_control:
    label: "{{ item.1 }}"
  when: item.1 is mapping
  tags:
    - podman-deploy

- name: manage volume mount files - inline content
  copy:
    dest:    "{{ item.1.path }}"
    content: "{{ item.1.content }}"
    owner:   "{{ item.1.owner  | default(item.0.user)  | default('root') }}"
    group:   "{{ item.1.group | default(item.0.group) | default('root') }}"
    mode:    "{{ item.1.mode | default(omit) }}"
  loop: "{{ _containers | subelements('manage_files', True) }}"
  loop_control:
    label: "{{ item.1.path }}"
  when: item.1.content is defined and (item.1.once is not defined or (item.1.once is defined and not item.1.once))
  tags:
    - podman-deploy

- name: manage volume mount files - template
  template:
    src:   "{{ item.1.template }}"
    dest:  "{{ item.1.path }}"
    owner: "{{ item.1.owner  | default(item.0.user)  | default('root') }}"
    group: "{{ item.1.group | default(item.0.group) | default('root') }}"
    mode:  "{{ item.1.mode | default(omit) }}"
  loop: "{{ _containers | subelements('manage_files', True) }}"
  loop_control:
    label: "{{ item.1.path }}"
  when: item.1.template is defined and (item.1.once is not defined or (item.1.once is defined and not item.1.once))
  tags:
    - podman-deploy

- name: manage volume mount files - copy remote file
  copy:
    remote_src: yes
    src:        "{{ item.1.copy_from }}"
    dest:       "{{ item.1.path }}"
    owner:      "{{ item.1.owner  | default(item.0.user)  | default('root') }}"
    group:      "{{ item.1.group | default(item.0.group) | default('root') }}"
    mode:       "{{ item.1.mode | default(omit) }}"
  loop: "{{ _containers | subelements('manage_files', True) }}"
  loop_control:
    label: "{{ item.1.path }}"
  when: item.1.copy_from is defined and (item.1.once is not defined or (item.1.once is defined and not item.1.once))
  tags:
    - podman-deploy

- name:  chown volume mount dirs
  shell: "chown -R {{ item.0.user }}:{{ item.0.group }} {{ item.1 }}"
  loop:  "{{ _containers | subelements('manage_dirs', True) }}"
  loop_control:
    label: "{{ item.1 }}"
  when:  ('user' in item.0 and 'group' in item.0) and not (item.0.user == "root" or item.0.group == "root")
  tags:
    - podman-deploy
