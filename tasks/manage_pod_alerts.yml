- name:     get pod alerts
  set_fact:
    _pod_alert: "{{ lookup('template', 'alert-template.yml.j2', template_vars={'service_name': 'pod-' + item.name + '.service' }) | from_yaml }}"
  loop:     "{{ pods }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.enabled and item.running
  register: _pod_alerts
  tags:
    - podman-deploy
    - pods
    - alerts

#- debug:
#    msg: "{{ _pod_alerts | to_json }}"
#  tags:
#    - podman-deploy
#    - containers
#    - alerts

#- pause:
#    prompt: "{{ _pod_alerts | to_json }}"
#  tags:
#    - podman-deploy
#    - containers
#    - alerts

- name:     get pod container alerts
  set_fact:
    _pod_container_alert: "{{ lookup('template', 'alert-template.yml.j2', template_vars={'service_name': 'pod-container-' + item.1.name + '.service' }) | from_yaml }}"
  loop:     "{{ pods | subelements('containers') }}"
  loop_control:
    label: "{{ item.0.name }} | {{ item.1.name }}"
  when: item.1.enabled and item.1.running
  register: _pod_container_alerts
  tags:
    - podman-deploy
    - pods
    - alerts

- name: make a dict of alerts
  set_fact:
    pod_alerts:
      groups:
        - name: "PodsRunning{{ alert_name_suffix | camel_case }}"
          rules: "{{ _pod_alerts.results | rejectattr('skipped', 'defined') | map(attribute='ansible_facts._pod_alert') | list }}"
          concurrency: 4
        - name: "PodsContainersRunning{{ alert_name_suffix | camel_case }}"
          rules: "{{ _pod_container_alerts.results | rejectattr('skipped', 'defined') | map(attribute='ansible_facts._pod_container_alert') | list }}"
          concurrency: 4
  when: pods
  tags:
    - podman-deploy
    - pods
    - alerts



- name: alerts to file
  copy:
    dest: "{{ alerts_dir }}/pod-{{ alert_name_suffix }}-alerts.yml"
    content: "{{ pod_alerts | to_nice_yaml }}"
  when: pods
  tags:
    - podman-deploy
    - pods
    - alerts
