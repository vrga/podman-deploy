---
- name: set required images for containers and pods
  set_fact:
    _container_images: '{{  containers | default([]) | map(attribute="image") }}'
    _pod_images: '{{ pods | default([]) | map(attribute="containers") | flatten(levels=1) | map(attribute="image") }}'
  tags:
    - podman-deploy
    - images
    - pods
    - containers

- name: combine image lists and remove non-unique entries
  set_fact:
    _required_images: "{{ _container_images + _pod_images | sort | unique }}"
  tags:
    - podman-deploy
    - images
    - pods
    - containers

- name:          check if image exists.
  shell:         'podman image exists "{{ item }}"'
  register:      _image_exists
  loop:          "{{ _required_images }}"
  loop_control:
    label: "{{ item }}"
  ignore_errors: True
  tags:
    - podman-deploy
    - images
    - containers
    - pods

- name:        "pull images" # noqa 301
  shell:       'podman image pull "{{ item.item }}"'
  loop:        "{{ _image_exists.results }}"
  loop_control:
    label: "{{ item.item }}"
  when:        always_pull or (not pull_disabled and item.rc != 0 and not item.item.startswith('localhost/'))
  register:   _image_updated
  environment: "{{ proxy_env | default({}) }}"
  tags:
    - podman-deploy
    - images
    - containers
    - pods

- name: set target to allow easy bringup and teardown of all units managed by this
  template:
    src:  "podman.target.j2"
    dest: '/etc/systemd/system/podman.target'
    mode: 0664

- name: systemd reload daemon
  command: 'systemctl daemon-reload'

- name: enable podman target
  systemd:
    name: podman.target
    state: started
    enabled: yes

- name: set up config dir for this role
  file:
    state: directory
    path:  "{{ role_data_dir }}"
    owner: root
    group: root
  tags:
    - podman-deploy
    - configure

- name: set up config dir for this role
  file:
    state: directory
    path:  "{{ alerts_dir }}"
    owner: root
    group: root
  tags:
    - podman-deploy
    - configure
    - alerts

- import_tasks: ./systemd_containers.yml
- import_tasks: ./systemd_pods.yml
- import_tasks: ./manage_container_alerts.yml
- import_tasks: ./manage_pod_alerts.yml
