# {{ ansible_managed }}
# Pod container definition for pod: {{ item.0.name | mandatory }} container: {{ item.1.name | mandatory }}

[Unit]
Description=Podman pod: {{ item.0.name | mandatory }} container: {{ item.1.name | mandatory }}
Wants=network.target netfilter-persistent.service
After=network-online.target netfilter-persistent.service
BindsTo=pod-{{ item.0.name | mandatory }}.service
After=pod-{{ item.0.name | mandatory }}.service

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart={{ item.1.restart | default('always') }}
RestartSec={{ item.1.restart_sec | default('15s') }}
ExecStartPre=/bin/rm -f %t/%n-pid %t/%n-cid
ExecStartPre=-/usr/bin/podman rm {{ item.1.name | mandatory }}
ExecStart=/usr/bin/podman run \
    --conmon-pidfile %t/%n-pid \
    --cidfile %t/%n-cid \
    --cgroups=no-conmon \
    -d \
    --name {{ item.1.name | mandatory }} \
    --pod {{ item.0.name }} \
{% if item.1.user is defined and item.1.user != "" and item.1.group is defined and item.1.group != "" -%}
    --user {{ item.1.user }}:{{ item.1.group }} \
{% endif -%}
{% for envvar in item.1.environment | default([]) -%}
    -e {{ envvar }} \
{% endfor -%}
{% for mount in item.1.mounts | default([]) -%}
    -v {{ mount }} \
{% endfor -%}
{% if item.1.health is defined -%}
    --health-cmd="{{ item.1.health.cmd }}" \
    --health-interval={{ item.1.health.interval | default('30s') }} \
    --health-retries={{ item.1.health.retries | default(3) }} \
    --health-start-period={{ item.1.health.grace_period | default('20s') }} \
    --health-timeout={{ item.1.health.check_timeouts | default('30s') }} \
{% else %}
    --no-healthcheck=true \
{% endif -%}
  --label "io.containers.autoupdate=registry" \
  --log-driver=journald \
{{ item.1.extra_args | default('') }} {{ item.1.image | mandatory }} {{ item.1.parameters | default('') }}
ExecStop=/usr/bin/podman stop --ignore --cidfile %t/%n-cid -t 10
ExecStopPost=/usr/bin/podman rm --ignore -f --cidfile %t/%n-cid
PIDFile=%t/%n-pid
KillMode=none
Type=forking

[Install]
WantedBy=multi-user.target default.target